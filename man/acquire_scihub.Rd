% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acquire_utilities.R
\name{acquire_scihub}
\alias{acquire_scihub}
\title{Utility Function to Acquire Sentinel-2 Imagery Using \code{CDSE} Package}
\usage{
acquire_scihub(
  aoi,
  from_date,
  to_date,
  output_dir = tempdir(),
  save_creds = TRUE,
  clientid = NULL,
  secret = NULL
)
}
\arguments{
\item{aoi, }{{sf} object, POLYGON or MULTIPOLYGON of area of interest}

\item{from_date, }{string, represents start of date range,
formatted as "YYYY-MM-DD"}

\item{to_date, }{string, end of date range, formatted as "YYYY-MM-DD"}

\item{output_dir, }{string, path to save downloaded, and processed imagery}

\item{save_creds, }{logical, whether to save CDSE credentials. Default TRUE.}

\item{clientid, }{string, user's OAuth client id. Required if \code{save_creds}
is TRUE.}

\item{secret, }{string, user's OAuth secret. Required if \code{save_creds} is TRUE.}
}
\value{
list of BOA files
}
\description{
This function uses the \code{CDSE} package
to send a request to Copernicus Dataspace, and prepare the products.
Called by \code{\link[rOPTRAM]{optram_acquire_s2}}
}
\note{
#' This function utilizes the \code{CDSE} package.
Make sure to install the \code{CDSE} and \code{jsonlite} packages.
Create OAuth account and token:
Creating an Account:
\enumerate{
\item Navigate to the \url{https://dataspace.copernicus.eu/}.
\item Click the "Register" button to access the account creation page.
\item If already registered, enter your username and password, and click "Login."
\item Once logged in, go to the User dashboard and click "User Settings" to access the Settings page.
}
Creating OAuth Client:
\enumerate{
\item On the Settings page, click the green "Create New" button located on the right.
\item Enter a suitable "Client Name" and click the green "Create Client" button.
\item A Client secret is generated.
}
The user must save her secret and clientid somewhere.
These credentials will be saved automatically to a standard filesystem
location if the user calls \code{store_cdse_credentials()}
with the \code{clientid} and \code{secret} parameters.
If the user chooses not to save credentials to the standard filesystem
location, then she will need to add both clientid and secret to each
\code{acquire_scihub()} function call.

Using Credentials with \code{aquire_scihub}:
\itemize{
\item If the credentials were stored using \code{store_cdse_credentials()}, the credentials are retrieved automatically.
\item Otherwise, you can utilize the generated \code{clientid} and \code{secret} from \url{https://dataspace.copernicus.eu/} within the \code{aquire_scihub()} function.
\item If you want to store your credentials on your computer, ensure that when running \code{aquire_scihub()}, the \code{save_creds} parameter is set to 'TRUE'.
\item During the first run of \code{aquire_scihub()}, manually input your \code{clientid} and \code{secret} in the function signature. Subsequent runs will use the stored credentials.
}

\strong{Subject Area Constraint:}
The downloadable images are restricted to a maximum size of 2500 pixels on
each side. This limitation is established due to the final resolution set to
10 meters using JavaScript. Consequently, the subject area available for
download is limited to 25 kilometers in both directions. Please be aware of
this restriction when selecting your desired area for download.
\strong{Area of Interest (AOI) Specification:}
When defining your Area of Interest (AOI), please ensure that it is
represented as a polygonal layer with only one feature. This feature can
either be a single POLYGON or a MULTIPOLYGON, which may consist of
non-contiguous areas, but only one feature is permissible.
}
\examples{
\dontrun{
from_date <- "2018-12-01"
to_date <- "2019-04-30"
aoi <- sf::st_read(system.file("extdata",
                  "lachish.gpkg", package = 'rOPTRAM'))
Make sure the AOI is a MULTIPOLYGON
aoi <- sf::st_as_sf(sf::st_union(aoi))
optram_options("veg_index", "NDVI", show_opts = FALSE)
optram_options("SWIR_band", 11)
acquire_scihub(aoi, from_date, to_date,
             clientid = '...enter clientid here...',
             secret = '...enter secret here...')
}
}
